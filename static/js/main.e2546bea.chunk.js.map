{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelectedTodo","className","map","id","title","completed","userId","classNames","type","onClick","TodoFilter","query","filterTodos","onQuery","onfilterTodos","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todo","onClose","useState","user","setUser","useEffect","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","setQuery","setFilterTodos","handleSelectingTodo","useCallback","handleQuery","userQuery","handlefilterTodos","userFilter","visibleTodos","filter","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2546bea.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId?: number;\n  onSelectedTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({\n          id,\n          title,\n          completed,\n          userId,\n        }) => (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodoId === id,\n            })}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              ) }\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectedTodo({\n                  id,\n                  title,\n                  completed,\n                  userId,\n                })}\n              >\n                <span className=\"icon\">\n                  {selectedTodoId === id\n                    ? <i className=\"far fa-eye-slash\" />\n                    : <i className=\"far fa-eye\" />}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  query: string;\n  filterTodos: string;\n  onQuery: (query: string) => void;\n  onfilterTodos: (filterTodos: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filterTodos,\n  onQuery,\n  onfilterTodos,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterTodos}\n            onChange={(event) => onfilterTodos(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(100)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo.userId) {\n      getUser(todo.userId)\n        .then(setUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user?.name || 'Uknown user'}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterTodos, setFilterTodos] = useState('All');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const handleSelectingTodo = useCallback((todo: Todo) => {\n    setSelectedTodo(todo);\n  }, []);\n\n  const handleQuery = useCallback((userQuery: string) => {\n    setQuery(userQuery);\n  }, []);\n\n  const handlefilterTodos = useCallback((userFilter: string) => {\n    setFilterTodos(userFilter);\n  }, []);\n\n  let visibleTodos = [...todos];\n\n  if (filterTodos === 'active') {\n    visibleTodos = visibleTodos.filter(({ completed }) => completed === false);\n  }\n\n  if (filterTodos === 'completed') {\n    visibleTodos = visibleTodos.filter(({ completed }) => completed === true);\n  }\n\n  if (query) {\n    visibleTodos = visibleTodos.filter(({ title }) => title.includes(query));\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filterTodos={filterTodos}\n                onQuery={handleQuery}\n                onfilterTodos={handlefilterTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodo?.id}\n                    onSelectedTodo={handleSelectingTodo}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}